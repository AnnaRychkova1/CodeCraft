.tasksContainer {
  display: flex;
  flex-wrap: wrap;
  gap: 24px 32px;
  list-style: none;
}

.taskItem {
  min-width: 260px;
  width: 100%;
  padding: 16px;
  border-radius: 6px;
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0px 4px 8px rgba(150, 246, 185, 0.505);
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 24px;
}

.solved {
  border: 4px solid rgba(17, 121, 18, 0.2);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}

.unsolved {
  border: 4px solid var(--accent-light);
  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);
}

.taskItem:hover {
  transform: scale(1.01);

  box-shadow: -8px -8px 12px rgba(198, 248, 201, 0.95),
    8px 8px 12px rgba(185, 246, 195, 0.95);
}

.solved:hover {
  border: 4px double rgba(17, 121, 18, 0.4);
}

.unsolved:hover {
  border: 4px double var(--accent-dark);
}

.textBox {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 12px;
  cursor: pointer;
}

.title {
  color: var(--accent-dark);
  font-size: 1.3rem;
  font-weight: 500;
}

.description {
  font-size: 16px;
}

.labelBox {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-end;
  gap: 8px;
}

.iconButton {
  border: none;
  background-color: transparent;
  line-height: 0;
  transition: transform 0.15s ease, filter 0.15s ease;
}

.iconButton:hover {
  transform: scale(1.05);
  filter: brightness(1.2);
}

.iconButton svg {
  font-size: 2rem;
}

.linkToTask {
  font-size: 1.25rem;
  color: var(--btn);
  text-decoration: underline;
  font-weight: 600;
  transition: all 0.2s ease;
}

.linkToTask:hover,
.linkToTask:focus {
  color: var(--btn-hover);
  transform: scale(1.02);
  text-decoration: none;
  outline: none;
}

.levelBeginner {
  color: var(--level-beginner);
}
.levelIntermediate {
  color: var(--level-intermediate);
}
.levelAdvanced {
  color: var(--level-advanced);
}

.languageJavascript {
  color: var(--color-javascript);
}
.languagePython {
  color: var(--color-python);
}
.languageJava {
  color: var(--color-java);
}

.typeTheory {
  color: var(--color-theory);
}
.typePractice {
  color: var(--color-practice);
}

@media only screen and (min-width: 768px) {
  .taskItem {
    flex-basis: calc((100% - 32px) / 2);
    min-width: 260px;
  }

  .title {
    font-size: 1.5rem;
  }

  .description {
    font-size: 18px;
  }
}

@media only screen and (min-width: 1024px) {
  .tasksContainer {
    display: flex;
    flex-wrap: wrap;
    gap: 24px 32px;
    margin-top: -68px;
    position: relative;
    padding-left: 48px;
  }

  .tasksContainer::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    width: 4px;
    background-image: radial-gradient(circle, #888 1.5px, transparent 1.5px);
    background-size: 4px 8px;
    background-repeat: repeat-y;
  }

  .taskItem {
    flex-basis: calc((100% - 32px) / 2);
    min-width: 260px;
  }
}

@media only screen and (min-width: 1440px) {
  .taskItem {
    flex-basis: calc((100% - 64px) / 3);
    min-width: 260px;
  }
}
